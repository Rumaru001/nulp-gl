openapi: 3.0.1
info:
  title: NotesMaker
  description: This is website API that will help you to create, store, read, update,
    delete your notes. Also you will be able to check every user's statictic and add
    up to 5 other users to manage your personal note. Here is tags too! You can add
    then to your notes and sort by them.
  contact:
    email: ostapbod674@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://notesmaker/notes
tags:
- name: note
  description: Everything about your notes
- name: tag
  description: CRUD tag options
- name: user
  description: Operations about user
paths:
  /note:
    put:
      tags:
      - note
      summary: Update an existing note
      operationId: updateNote
      requestBody:
        description: Note object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Note not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    post:
      tags:
      - note
      summary: Add a new note
      operationId: addNote
      requestBody:
        description: Note object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    get:
      tags:
      - note
      summary: List of notes sorted chronologically
      description: Some amount of notes that was made (most recent of them)
      operationId: notes
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        404:
          description: Notes not found
          content: {}
      
  /note/findByTags:
    get:
      tags:
      - note
      summary: Finds Notes by tags
      description: Muliple tags can be provided with comma separated strings. Use         tag1,
        tag2, tag3 for testing.
      operationId: findNotesByTags
      parameters:
      - name: tags
        in: query
        description: Tags to filter by
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        400:
          description: Invalid tag value
          content: {}
      
  /note/{note_id}:
    get:
      tags:
      - note
      summary: Find note by ID
      description: Returns a single note
      operationId: getNoteById
      parameters:
      - name: note_id
        in: path
        description: ID of note to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Note not found
          content: {}

    post:
      tags:
      - note
      summary: Updates a note in the store with form data
      operationId: updateNoteWithForm
      parameters:
      - name: note_id
        in: path
        description: ID of pet that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Note object that needs to be updated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    delete:
      tags:
      - note
      summary: Deletes a note
      operationId: deleteNote
      parameters:
      - name: note_id
        in: path
        description: Note id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Note not found
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
  /user/create:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged out user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: email
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
  /user/{user_id}:
    get:
      tags:
      - user
      summary: Get user and his statistics by user name
      operationId: getUserByName
      parameters:
      - name: user_id
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
    post:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: user_id
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: User not found
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: user_id
        in: path
        description: The user_id that needs to be deleted
        required: true
        schema:
          type: integer
      responses:
        400:
          description: Invalid user_id supplied
          content: {}
        404:
          description: User not found
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
  /tag:
    post:
      tags:
      - tag
      summary: Create a new tag
      operationId: createTag
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    get:
      tags:
      - tag
      summary: List of all tags
      description: Some amount of notes that was made (most recent of them)
      operationId: tags
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        404:
          description: Notes not found
          content: {}

  /tag/{tag_id}:
    put:
      tags:
      - tag
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateTag
      parameters:
      - name: tag_id
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: Tag not found
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
      x-codegen-request-body-name: body
    delete:
      tags:
      - tag
      summary: Delete tag
      description: This can only be done by the logged in user.
      operationId: deleteTag
      parameters:
      - name: tag_id
        in: path
        description: The tag_id that needs to be deleted
        required: true
        schema:
          type: integer
      responses:
        400:
          description: Invalid user_id supplied
          content: {}
        404:
          description: User not found
          content: {}
      security:
      - notemaker_auth:
        - write:notes
        - read:notes
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
        own_notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        avaliable_to_edit_notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
    Note:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        text:
          maxLength: 404
          type: string
        owner_id:
          type: integer
          format: int64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxLength: 20
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          maxLength: 5
        modifications:
          type: array
          items:
            $ref: '#/components/schemas/Modifications'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Modifications:
      type: object
      properties:
        id:
          type: integer
          format: int64
        note_id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        date:
          type: string
          description: Date and time of modification
  securitySchemes:
    notemaker_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://notemaker/auth/dialog
          scopes:
            write:notes: modify notes in your account
            read:notes: read your notes
    api_key:
      type: apiKey
      name: api_key
      in: header
